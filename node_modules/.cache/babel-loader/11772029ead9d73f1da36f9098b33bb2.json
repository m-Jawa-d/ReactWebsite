{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\WebDevelopment\\\\React\\\\chatapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\n\nconst App = () => {\n  _s();\n\n  let [nam, nameChange] = useState({\n    fname: '',\n    lname: '',\n    email: '',\n    no: ''\n  });\n\n  let thisPut = obj => {\n    const value = obj.target.value;\n    const name = obj.target.name;\n    nameChange(pre => {\n      if (name === 'fname') {\n        return {\n          fname: value,\n          lname: pre.lname,\n          email: pre.email\n        };\n      } else if (name === 'lname') {\n        return {\n          fname: pre.fname,\n          lname: value,\n          email: pre.email\n        };\n      } else if (name === 'email') {\n        return {\n          fname: pre.fname,\n          lname: pre.lname,\n          email: value\n        };\n      } else if (name === 'no') {\n        return {\n          fname: pre.fname,\n          lname: pre.lname,\n          email: pre.email,\n          no: value\n        };\n      }\n    });\n  };\n\n  let sent = event => {\n    event.preventDefault();\n    alert('Submitted Successfully');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sent,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cen\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Hello \", nam.fname, \" \", nam.lname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'black'\n            },\n            children: nam.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"fname\",\n            onChange: thisPut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lname\",\n            onChange: thisPut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: thisPut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"no\",\n            onChange: thisPut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"k1l5WtB+cuD0mrQzf6EwQyeGiRk=\");\n\n_c = App;\nexport default App;\n/*const App = () => {\r\n  let [fullName, UpdFullName] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n  });\r\n\r\n  let message = (obj) => {\r\n    const value = obj.target.value;\r\n    const name = obj.target.name;\r\n\r\n    UpdFullName((preval) => {\r\n      if (name === \"fname\") {\r\n        return {\r\n          fname: value,\r\n          lname: preval.lname,\r\n        };\r\n      } else if (name === \"lname\") {\r\n        return {\r\n          fname: preval.fname,\r\n          lname: value,\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const send = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={send}>\r\n        <div className=\"center\">\r\n          <div className=\"cen\">\r\n            <h1>\r\n              Hello {fullName.fname} {fullName.lname}{\" \"}\r\n            </h1>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your First Name.\"\r\n              onChange={message}\r\n              name=\"fname\"\r\n              value={fullName.fname}\r\n            />\r\n\r\n            <input type=\"text\" placeholder=\"Enter your Last Name.\" onChange={message}\r\n              name=\"lname\"\r\n              value={fullName.lname}\r\n            />\r\n\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default App;*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/WebDevelopment/React/chatapp/src/App.jsx"],"names":["React","useState","App","nam","nameChange","fname","lname","email","no","thisPut","obj","value","target","name","pre","sent","event","preventDefault","alert","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,MAAI,CAACC,GAAD,EAAMC,UAAN,IAAoBH,QAAQ,CAAC;AAC/BI,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,KAAK,EAAE,EAHwB;AAI/BC,IAAAA,EAAE,EAAC;AAJ4B,GAAD,CAAhC;;AAMA,MAAIC,OAAO,GAAIC,GAAD,IAAS;AACrB,UAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAWD,KAAzB;AACA,UAAME,IAAI,GAAGH,GAAG,CAACE,MAAJ,CAAWC,IAAxB;AAEAT,IAAAA,UAAU,CAAEU,GAAD,IAAS;AAClB,UAAID,IAAI,KAAK,OAAb,EAAsB;AACpB,eAAQ;AACNR,UAAAA,KAAK,EAAEM,KADD;AAENL,UAAAA,KAAK,EAAEQ,GAAG,CAACR,KAFL;AAGNC,UAAAA,KAAK,EAAEO,GAAG,CAACP;AAHL,SAAR;AAKD,OAND,MAMO,IAAIM,IAAI,KAAK,OAAb,EAAsB;AAC3B,eAAQ;AACNR,UAAAA,KAAK,EAAES,GAAG,CAACT,KADL;AAENC,UAAAA,KAAK,EAAEK,KAFD;AAGNJ,UAAAA,KAAK,EAAEO,GAAG,CAACP;AAHL,SAAR;AAKD,OANM,MAOF,IAAIM,IAAI,KAAK,OAAb,EAAsB;AACzB,eAAQ;AACNR,UAAAA,KAAK,EAAES,GAAG,CAACT,KADL;AAENC,UAAAA,KAAK,EAAEQ,GAAG,CAACR,KAFL;AAGNC,UAAAA,KAAK,EAAEI;AAHD,SAAR;AAKD,OANI,MAOA,IAAIE,IAAI,KAAK,IAAb,EAAmB;AACtB,eAAQ;AACNR,UAAAA,KAAK,EAAES,GAAG,CAACT,KADL;AAENC,UAAAA,KAAK,EAAEQ,GAAG,CAACR,KAFL;AAGNC,UAAAA,KAAK,EAAEO,GAAG,CAACP,KAHL;AAINC,UAAAA,EAAE,EAACG;AAJG,SAAR;AAMD;AACF,KA7BS,CAAV;AA8BD,GAlCD;;AAmCA,MAAII,IAAI,GAAIC,KAAD,IAAW;AACpBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,GAHD;;AAIA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEH,IAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAA,iCAAWZ,GAAG,CAACE,KAAf,OAAuBF,GAAG,CAACG,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,KAAK,EAAE;AAAEa,cAAAA,KAAK,EAAE;AAAT,aAAV;AAAA,sBAA+BhB,GAAG,CAACI;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,OAAxB;AAAgC,YAAA,QAAQ,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,OAAxB;AAAgC,YAAA,QAAQ,EAAEA;AAA1C;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,OAAzB;AAAiC,YAAA,QAAQ,EAAEA;AAA3C;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,IAAI,EAAC,IAA1B;AAA+B,YAAA,QAAQ,EAAEA;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CAhED;;GAAMP,G;;KAAAA,G;AAiEN,eAAeA,GAAf;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  let [nam, nameChange] = useState({\r\n    fname: '',\r\n    lname: '',\r\n    email: '',\r\n    no:'',\r\n  })\r\n  let thisPut = (obj) => {\r\n    const value = obj.target.value;\r\n    const name = obj.target.name;\r\n\r\n    nameChange((pre) => {\r\n      if (name === 'fname') {\r\n        return ({\r\n          fname: value,\r\n          lname: pre.lname,\r\n          email: pre.email,\r\n        })\r\n      } else if (name === 'lname') {\r\n        return ({\r\n          fname: pre.fname,\r\n          lname: value,\r\n          email: pre.email,\r\n        })\r\n      }\r\n      else if (name === 'email') {\r\n        return ({\r\n          fname: pre.fname,\r\n          lname: pre.lname,\r\n          email: value,\r\n        })\r\n      }\r\n      else if (name === 'no') {\r\n        return ({\r\n          fname: pre.fname,\r\n          lname: pre.lname,\r\n          email: pre.email,\r\n          no:value,\r\n        })\r\n      }\r\n    })\r\n  }\r\n  let sent = (event) => {\r\n    event.preventDefault();\r\n    alert('Submitted Successfully')\r\n  }\r\n  return (\r\n    <>\r\n      <form onSubmit={sent}>\r\n        <div className=\"center\">\r\n          <div className=\"cen\">\r\n            <h1>Hello {nam.fname} {nam.lname}</h1>\r\n            <p style={{ color: 'black' }}>{nam.email}</p>\r\n            \r\n            <input type=\"text\" name='fname' onChange={thisPut} />\r\n            <input type=\"text\" name='lname' onChange={thisPut} />\r\n            <input type=\"email\" name='email' onChange={thisPut} />\r\n            <input type=\"number\" name='no' onChange={thisPut} />\r\n            <button type='submit'>Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*const App = () => {\r\n  let [fullName, UpdFullName] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n  });\r\n\r\n  let message = (obj) => {\r\n    const value = obj.target.value;\r\n    const name = obj.target.name;\r\n\r\n    UpdFullName((preval) => {\r\n      if (name === \"fname\") {\r\n        return {\r\n          fname: value,\r\n          lname: preval.lname,\r\n        };\r\n      } else if (name === \"lname\") {\r\n        return {\r\n          fname: preval.fname,\r\n          lname: value,\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const send = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={send}>\r\n        <div className=\"center\">\r\n          <div className=\"cen\">\r\n            <h1>\r\n              Hello {fullName.fname} {fullName.lname}{\" \"}\r\n            </h1>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your First Name.\"\r\n              onChange={message}\r\n              name=\"fname\"\r\n              value={fullName.fname}\r\n            />\r\n\r\n            <input type=\"text\" placeholder=\"Enter your Last Name.\" onChange={message}\r\n              name=\"lname\"\r\n              value={fullName.lname}\r\n            />\r\n\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default App;*/\r\n"]},"metadata":{},"sourceType":"module"}